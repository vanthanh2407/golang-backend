services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    restart: unless-stopped
    ports:
      - ${PORT}:8080
    environment:
      APP_ENV: ${APP_ENV}
      PORT: ${PORT}
      MYSQL_DB_HOST: ${MYSQL_DB_HOST}
      MYSQL_DB_PORT: ${MYSQL_DB_PORT}
      MYSQL_DB_DATABASE: ${MYSQL_DB_DATABASE}
      MYSQL_DB_USERNAME: ${MYSQL_DB_USERNAME}
      MYSQL_DB_PASSWORD: ${MYSQL_DB_PASSWORD}
    depends_on:
      mysql_golang:
        condition: service_started  # Thay service_healthy
    networks:
      - mysql
  mysql_golang:
    image: mysql:latest
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${MYSQL_DB_DATABASE}
      MYSQL_USER: ${MYSQL_DB_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_DB_ROOT_PASSWORD}
    ports:
      - "${MYSQL_DB_PORT}:3306"
    volumes:
      - mysql_volume_golang:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "nc -z 127.0.0.1 3306 || exit 1"]  # Thay mysqladmin
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 30s
    networks:
      - mysql

volumes:
  mysql_volume_golang:

networks:
  mysql:
